name: reusable-workflow

on:
  push:
    branches:
      - development
jobs:

  Build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
#      - uses: aws-actions/setup-sam@v1
#      - uses: aws-actions/configure-aws-credentials@v1
#        with:
#          role-to-assume: ${{ secrets.AWS_ROLE }}
#          role-session-name: git-actions-pipeline
#          aws-region: us-east-1
#      - name: Login to ECR
#        id: login-ecr
#        uses: aws-actions/amazon-ecr-login@v1
      - uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build and Analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd ${{ inputs.module }}
          bash ./gradlew -Pbuild_target=SNAPSHOT clean build jacocoTestReport spotlessApply spotbugsMain
          bash ./gradlew -Pbuild_target=SNAPSHOT sonarqube showSonarQubeLink --info
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "**/**/test-results/**/*.xml"
#      - name: Docker Build & Push
#        env:
#          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#        run: |
#          cd ${{ inputs.module }}
#          export SERVICE_NAME=`echo "${{ github.repository }}" | awk -F "/" '{print $2}'`
#          export VERSION=`bash ./gradlew -Pbuild_target=SNAPSHOT -q properties | grep version | sed -e "s@version: @@g"`
#          export SERVICE_CODE=`echo "$VERSION" | cut -d '-' -f1`
#          export IMAGE_NAME="$ECR_REGISTRY/$SERVICE_NAME-${{ inputs.module }}:$SERVICE_CODE.${{ github.sha }}"
#          docker build -t $ECR_REGISTRY/$SERVICE_NAME-${{ inputs.module }}:$SERVICE_CODE.${{ github.sha }} .
#          docker push $ECR_REGISTRY/$SERVICE_NAME-${{ inputs.module }}:$SERVICE_CODE.${{ github.sha }}




